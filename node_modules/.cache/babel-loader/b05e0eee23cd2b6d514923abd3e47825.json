{"ast":null,"code":"'use strict';\n\nvar Mixin = require('../../utils/mixin'),\n    inherits = require('util').inherits,\n    UNICODE = require('../../common/unicode'); //Aliases\n\n\nvar $ = UNICODE.CODE_POINTS;\n\nvar PositionTrackingPreprocessorMixin = module.exports = function (preprocessor) {\n  // NOTE: avoid installing tracker twice\n  if (!preprocessor.__locTracker) {\n    preprocessor.__locTracker = this;\n    Mixin.call(this, preprocessor);\n    this.preprocessor = preprocessor;\n    this.isEol = false;\n    this.lineStartPos = 0;\n    this.droppedBufferSize = 0;\n    this.col = -1;\n    this.line = 1;\n  }\n\n  return preprocessor.__locTracker;\n};\n\ninherits(PositionTrackingPreprocessorMixin, Mixin);\nObject.defineProperty(PositionTrackingPreprocessorMixin.prototype, 'offset', {\n  get: function () {\n    return this.droppedBufferSize + this.preprocessor.pos;\n  }\n});\n\nPositionTrackingPreprocessorMixin.prototype._getOverriddenMethods = function (mxn, orig) {\n  return {\n    advance: function () {\n      var cp = orig.advance.call(this); //NOTE: LF should be in the last column of the line\n\n      if (mxn.isEol) {\n        mxn.isEol = false;\n        mxn.line++;\n        mxn.lineStartPos = mxn.offset;\n      }\n\n      if (cp === $.LINE_FEED) mxn.isEol = true;\n      mxn.col = mxn.offset - mxn.lineStartPos + 1;\n      return cp;\n    },\n    retreat: function () {\n      orig.retreat.call(this);\n      mxn.isEol = false;\n      mxn.col = mxn.offset - mxn.lineStartPos + 1;\n    },\n    dropParsedChunk: function () {\n      var prevPos = this.pos;\n      orig.dropParsedChunk.call(this);\n      mxn.droppedBufferSize += prevPos - this.pos;\n    }\n  };\n};","map":{"version":3,"sources":["D:/Office-Work/Panel/medx_panel/node_modules/react-render-html/node_modules/parse5/lib/extensions/position_tracking/preprocessor_mixin.js"],"names":["Mixin","require","inherits","UNICODE","$","CODE_POINTS","PositionTrackingPreprocessorMixin","module","exports","preprocessor","__locTracker","call","isEol","lineStartPos","droppedBufferSize","col","line","Object","defineProperty","prototype","get","pos","_getOverriddenMethods","mxn","orig","advance","cp","offset","LINE_FEED","retreat","dropParsedChunk","prevPos"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBC,QAD/B;AAAA,IAEIC,OAAO,GAAGF,OAAO,CAAC,sBAAD,CAFrB,C,CAIA;;;AACA,IAAIG,CAAC,GAAGD,OAAO,CAACE,WAAhB;;AAEA,IAAIC,iCAAiC,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAAUC,YAAV,EAAwB;AAC7E;AACA,MAAI,CAACA,YAAY,CAACC,YAAlB,EAAgC;AAC5BD,IAAAA,YAAY,CAACC,YAAb,GAA4B,IAA5B;AAEAV,IAAAA,KAAK,CAACW,IAAN,CAAW,IAAX,EAAiBF,YAAjB;AAEA,SAAKA,YAAL,GAAoBA,YAApB;AACA,SAAKG,KAAL,GAAa,KAAb;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA,SAAKC,iBAAL,GAAyB,CAAzB;AAEA,SAAKC,GAAL,GAAW,CAAC,CAAZ;AACA,SAAKC,IAAL,GAAY,CAAZ;AACH;;AAED,SAAOP,YAAY,CAACC,YAApB;AACH,CAjBD;;AAmBAR,QAAQ,CAACI,iCAAD,EAAoCN,KAApC,CAAR;AAEAiB,MAAM,CAACC,cAAP,CAAsBZ,iCAAiC,CAACa,SAAxD,EAAmE,QAAnE,EAA6E;AACzEC,EAAAA,GAAG,EAAE,YAAY;AACb,WAAO,KAAKN,iBAAL,GAAyB,KAAKL,YAAL,CAAkBY,GAAlD;AACH;AAHwE,CAA7E;;AAMAf,iCAAiC,CAACa,SAAlC,CAA4CG,qBAA5C,GAAoE,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACrF,SAAO;AACHC,IAAAA,OAAO,EAAE,YAAY;AACjB,UAAIC,EAAE,GAAGF,IAAI,CAACC,OAAL,CAAad,IAAb,CAAkB,IAAlB,CAAT,CADiB,CAGjB;;AACA,UAAIY,GAAG,CAACX,KAAR,EAAe;AACXW,QAAAA,GAAG,CAACX,KAAJ,GAAY,KAAZ;AACAW,QAAAA,GAAG,CAACP,IAAJ;AACAO,QAAAA,GAAG,CAACV,YAAJ,GAAmBU,GAAG,CAACI,MAAvB;AACH;;AAED,UAAID,EAAE,KAAKtB,CAAC,CAACwB,SAAb,EACIL,GAAG,CAACX,KAAJ,GAAY,IAAZ;AAEJW,MAAAA,GAAG,CAACR,GAAJ,GAAUQ,GAAG,CAACI,MAAJ,GAAaJ,GAAG,CAACV,YAAjB,GAAgC,CAA1C;AAEA,aAAOa,EAAP;AACH,KAjBE;AAmBHG,IAAAA,OAAO,EAAE,YAAY;AACjBL,MAAAA,IAAI,CAACK,OAAL,CAAalB,IAAb,CAAkB,IAAlB;AACAY,MAAAA,GAAG,CAACX,KAAJ,GAAY,KAAZ;AAEAW,MAAAA,GAAG,CAACR,GAAJ,GAAUQ,GAAG,CAACI,MAAJ,GAAaJ,GAAG,CAACV,YAAjB,GAAgC,CAA1C;AACH,KAxBE;AA0BHiB,IAAAA,eAAe,EAAE,YAAY;AACzB,UAAIC,OAAO,GAAG,KAAKV,GAAnB;AAEAG,MAAAA,IAAI,CAACM,eAAL,CAAqBnB,IAArB,CAA0B,IAA1B;AAEAY,MAAAA,GAAG,CAACT,iBAAJ,IAAyBiB,OAAO,GAAG,KAAKV,GAAxC;AACH;AAhCE,GAAP;AAkCH,CAnCD","sourcesContent":["'use strict';\r\n\r\nvar Mixin = require('../../utils/mixin'),\r\n    inherits = require('util').inherits,\r\n    UNICODE = require('../../common/unicode');\r\n\r\n//Aliases\r\nvar $ = UNICODE.CODE_POINTS;\r\n\r\nvar PositionTrackingPreprocessorMixin = module.exports = function (preprocessor) {\r\n    // NOTE: avoid installing tracker twice\r\n    if (!preprocessor.__locTracker) {\r\n        preprocessor.__locTracker = this;\r\n\r\n        Mixin.call(this, preprocessor);\r\n\r\n        this.preprocessor = preprocessor;\r\n        this.isEol = false;\r\n        this.lineStartPos = 0;\r\n        this.droppedBufferSize = 0;\r\n\r\n        this.col = -1;\r\n        this.line = 1;\r\n    }\r\n\r\n    return preprocessor.__locTracker;\r\n};\r\n\r\ninherits(PositionTrackingPreprocessorMixin, Mixin);\r\n\r\nObject.defineProperty(PositionTrackingPreprocessorMixin.prototype, 'offset', {\r\n    get: function () {\r\n        return this.droppedBufferSize + this.preprocessor.pos;\r\n    }\r\n});\r\n\r\nPositionTrackingPreprocessorMixin.prototype._getOverriddenMethods = function (mxn, orig) {\r\n    return {\r\n        advance: function () {\r\n            var cp = orig.advance.call(this);\r\n\r\n            //NOTE: LF should be in the last column of the line\r\n            if (mxn.isEol) {\r\n                mxn.isEol = false;\r\n                mxn.line++;\r\n                mxn.lineStartPos = mxn.offset;\r\n            }\r\n\r\n            if (cp === $.LINE_FEED)\r\n                mxn.isEol = true;\r\n\r\n            mxn.col = mxn.offset - mxn.lineStartPos + 1;\r\n\r\n            return cp;\r\n        },\r\n\r\n        retreat: function () {\r\n            orig.retreat.call(this);\r\n            mxn.isEol = false;\r\n\r\n            mxn.col = mxn.offset - mxn.lineStartPos + 1;\r\n        },\r\n\r\n        dropParsedChunk: function () {\r\n            var prevPos = this.pos;\r\n\r\n            orig.dropParsedChunk.call(this);\r\n\r\n            mxn.droppedBufferSize += prevPos - this.pos;\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}