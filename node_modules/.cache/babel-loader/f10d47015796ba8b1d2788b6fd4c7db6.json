{"ast":null,"code":"import _defineProperty from\"D:\\\\Native\\\\Clone Projects\\\\medx_panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\Native\\\\Clone Projects\\\\medx_panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Native\\\\Clone Projects\\\\medx_panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Native\\\\Clone Projects\\\\medx_panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Native\\\\Clone Projects\\\\medx_panel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{ServerurllogRegister,Serverurl}from'../Common/ServerUrl';import axios from'axios';import swal from'sweetalert';import\"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";import Loader from'react-loader-spinner';export var UploadEvents=/*#__PURE__*/function(_Component){_inherits(UploadEvents,_Component);var _super=_createSuper(UploadEvents);function UploadEvents(props){var _this;_classCallCheck(this,UploadEvents);_this=_super.call(this,props);_this.handleFileInput=function(event){console.log(event.target.files,'file');console.log(event.target.files[0],'file 0');var file_1=event.target.files[0];_this.setState({file:file_1,errorText:\"\"});if(event.target.files){var _this$setState;_this.setState((_this$setState={},_defineProperty(_this$setState,event.target.name,event.target.files[0]),_defineProperty(_this$setState,\"file\",URL.createObjectURL(event.target.files[0])),_defineProperty(_this$setState,\"ExcelFile\",event.target.files[0]),_this$setState));}console.log(\"File:\",event.target.files[0]);};_this.handleFileInputImages=function(event){console.log(event.target.files,'file');console.log(event.target.files[0],'file 0');var file_2=event.target.files[0];_this.setState({file_zip:file_2,errorText:\"\"});if(event.target.files){var _this$setState2;_this.setState((_this$setState2={},_defineProperty(_this$setState2,event.target.name,event.target.files[0]),_defineProperty(_this$setState2,\"file_zip\",URL.createObjectURL(event.target.files[0])),_defineProperty(_this$setState2,\"ExcelFile2\",event.target.files[0]),_this$setState2));}console.log(\"File:\",event.target.files[0]);};_this.state={file:\"\",file_zip:\"\",ExcelFile:\"\",ExcelFile2:\"\",loading:false,loading_image:false};return _this;}_createClass(UploadEvents,[{key:\"eventsImportImages\",value:function eventsImportImages(e){// if (CheckSeen == true) {\n//     validation = false;\n//     this.setState({\n//         errorText: \"*File must be of .csv format\"\n//     })\n// }\n}},{key:\"eventsImport\",value:function eventsImport(e){var _this2=this;console.log(\"excel:\",this.state.ExcelFile);console.log(\"excel:\",this.state.ExcelFile.name);var Status=this.state.ExcelFile.name;var CheckSeen=Status.includes('.csv');console.log(\"Status:\",CheckSeen);var validation=true;console.log(\"excel:\",this.state.ExcelFile2);console.log(\"excel:\",this.state.ExcelFile2.name);var Status=this.state.ExcelFile2.name;var CheckSeen=Status.includes('.csv');console.log(\"Status:\",CheckSeen);var validation=true;if(validation==true){var formData=new FormData();formData.append('file',this.state.ExcelFile2);this.setState({loading_image:true});// console.log('mydata', data)\nvar error=document.getElementById('err');axios({method:'post',url:Serverurl+'event/image/bulkupload',data:formData,headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))},config:{headers:{'Content-Type':'application/json'}}}).then(function(res){console.log('res',res.data);if(res.status===\"true\"){swal(\"Poof! Your imaginary file has been deleted!\",{icon:\"success\"});_this2.setState({loading:false});}else{swal(\"Event Images & CSV Uploaded Successfully!\");}// setTimeout(() => {\n//     window.location.href = \"/component/UploadEvents\"\n// }, 3000)\nconsole.log('data',res.data);}).catch(function(err){console.log({err:err});console.log(\"res\",err.response);var error_message=err.response.data.error.messages;console.log(\"error_excel\",error_message[0]);if(err){_this2.setState({loading:false});setTimeout(function(){_this2.setState({loading:false});_this2.setState(function(willSuccess){if(willSuccess){swal(error_message[0],{icon:\"warning\"});}else{swal(\"Your imaginary file is safe!\");}});},3000);}});}// if (CheckSeen == true) {\n//     validation = false;\n//     this.setState({\n//         errorText: \"*File must be of .csv format\"\n//     })\n// }\nif(this.state.file==\"\"){validation=false;this.setState({errorText:\"*File Import is required\"});}if(validation==true){var _formData=new FormData();_formData.append('file',this.state.ExcelFile);this.setState({loading:true});// console.log('mydata', data)\nvar error=document.getElementById('err');axios({method:'post',url:Serverurl+'event/import',data:_formData,headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))},config:{headers:{'Content-Type':'application/json'}}}).then(function(res){console.log('res',res.data);if(res.status===\"true\"){swal(\"Poof! Your imaginary file has been deleted!\",{icon:\"success\"});_this2.setState({loading:false});}else{swal(\"Events Added Successfully!\");}setTimeout(function(){window.location.href=\"/component/GridEvents\";},3000);console.log('data',res.data);}).catch(function(err){console.log({err:err});console.log(\"res\",err.response);var error_message=err.response.data.error.messages;console.log(\"error_excel\",error_message[0]);if(err){_this2.setState({loading:false});setTimeout(function(){_this2.setState({loading:false});_this2.setState(function(willSuccess){if(willSuccess){swal(error_message[0],{icon:\"warning\"});}else{swal(\"Your imaginary file is safe!\");}});},3000);}});}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{class:\"container\"},/*#__PURE__*/React.createElement(\"div\",{class:\"row\"},/*#__PURE__*/React.createElement(\"div\",{class:\"col-lg-11 col-md-12 card\"},/*#__PURE__*/React.createElement(\"div\",{class:\"parent\"},/*#__PURE__*/React.createElement(\"h4\",{class:\"mt-0 header-title\"},\"Upload Events\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-padding\"},/*#__PURE__*/React.createElement(\"div\",{class:\"form-group row input-margin\"},/*#__PURE__*/React.createElement(\"label\",{class:\"col-sm-2 col-form-label\"},\"ZIP File\"),/*#__PURE__*/React.createElement(\"div\",{class:\"col-sm-10\"},/*#__PURE__*/React.createElement(\"input\",{type:\"file\",id:\"input-file-now\",class:\"dropify\",name:\"file\",onChange:this.handleFileInputImages.bind(this)}))),this.state.errorText?/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},this.state.errorText):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-padding\"},/*#__PURE__*/React.createElement(\"div\",{class:\"form-group row input-margin\"},/*#__PURE__*/React.createElement(\"label\",{class:\"col-sm-2 col-form-label\"},\"CSV/Excel File\"),/*#__PURE__*/React.createElement(\"div\",{class:\"col-sm-10\"},/*#__PURE__*/React.createElement(\"input\",{type:\"file\",id:\"input-file-now\",class:\"dropify\",name:\"file\",onChange:this.handleFileInput.bind(this)}))),this.state.errorText?/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},this.state.errorText):null,/*#__PURE__*/React.createElement(\"div\",{class:\"form-group row\"},/*#__PURE__*/React.createElement(\"div\",{class:\"button-align\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",class:\"btn btn-danger waves-effect waves-light submit-button\",onClick:this.eventsImport.bind(this)},this.state.loading==true?/*#__PURE__*/React.createElement(Loader,{type:\"Circles\",color:\"#FFF\",height:20,width:20,timeout:8000}):\"Submit\")))))))));}}]);return UploadEvents;}(Component);export default UploadEvents;","map":{"version":3,"sources":["D:/Native/Clone Projects/medx_panel/src/component/UploadEvents.js"],"names":["React","Component","ServerurllogRegister","Serverurl","axios","swal","Loader","UploadEvents","props","handleFileInput","event","console","log","target","files","file_1","setState","file","errorText","name","URL","createObjectURL","handleFileInputImages","file_2","file_zip","state","ExcelFile","ExcelFile2","loading","loading_image","e","Status","CheckSeen","includes","validation","formData","FormData","append","error","document","getElementById","method","url","data","headers","localStorage","getItem","config","then","res","status","icon","catch","err","response","error_message","messages","setTimeout","willSuccess","window","location","href","bind","color","eventsImport"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ServerurllogRegister, Serverurl } from '../Common/ServerUrl';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nexport class UploadEvents extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file:\"\",\r\n            file_zip: \"\",\r\n            ExcelFile: \"\",\r\n            ExcelFile2: \"\",\r\n            loading: false,\r\n            loading_image: false\r\n        };\r\n    }\r\n\r\n\r\n\r\n    eventsImportImages(e) {\r\n\r\n        \r\n\r\n\r\n\r\n        // if (CheckSeen == true) {\r\n        //     validation = false;\r\n        //     this.setState({\r\n        //         errorText: \"*File must be of .csv format\"\r\n        //     })\r\n        // }\r\n\r\n\r\n\r\n\r\n        \r\n    }\r\n\r\n\r\n    eventsImport(e) {\r\n\r\n        \r\n\r\n        console.log(\"excel:\", this.state.ExcelFile)\r\n\r\n        console.log(\"excel:\", this.state.ExcelFile.name)\r\n\r\n        var Status = this.state.ExcelFile.name;\r\n\r\n        var CheckSeen = Status.includes('.csv')\r\n\r\n        console.log(\"Status:\", CheckSeen)\r\n\r\n        var validation = true;\r\n\r\n        \r\n        console.log(\"excel:\", this.state.ExcelFile2)\r\n\r\n        console.log(\"excel:\", this.state.ExcelFile2.name)\r\n\r\n        var Status = this.state.ExcelFile2.name;\r\n\r\n        var CheckSeen = Status.includes('.csv')\r\n\r\n        console.log(\"Status:\", CheckSeen)\r\n\r\n        var validation = true;\r\n\r\n        if (validation == true) {\r\n\r\n            let formData = new FormData();\r\n            formData.append('file', this.state.ExcelFile2)\r\n\r\n\r\n\r\n            this.setState({\r\n                loading_image: true\r\n            })\r\n\r\n            // console.log('mydata', data)\r\n\r\n            var error = document.getElementById('err');\r\n            axios({\r\n                method: 'post',\r\n                url: Serverurl + 'event/image/bulkupload',\r\n                data: formData,\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n                config: {\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                }\r\n            })\r\n                .then((res) => {\r\n                 \r\n                    console.log('res', res.data)\r\n                    if (res.status === \"true\") {\r\n                        swal(\"Poof! Your imaginary file has been deleted!\", {\r\n                            icon: \"success\",\r\n                        });\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    } else {\r\n                        swal(\"Event Images & CSV Uploaded Successfully!\");\r\n                    }\r\n                    // setTimeout(() => {\r\n                    //     window.location.href = \"/component/UploadEvents\"\r\n                    // }, 3000)\r\n                    console.log('data', res.data)\r\n                })\r\n                .catch((err) => {\r\n                    console.log({ err })\r\n\r\n                    console.log(\"res\", err.response)\r\n\r\n                    var error_message = err.response.data.error.messages;\r\n\r\n                    console.log(\"error_excel\", error_message[0])\r\n\r\n                    if (err) {\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                loading: false\r\n                            })\r\n                            this.setState((willSuccess) => {\r\n                                if (willSuccess) {\r\n                                    swal(error_message[0], {\r\n                                        icon: \"warning\",\r\n                                    });\r\n                                } else {\r\n                                    swal(\"Your imaginary file is safe!\");\r\n                                }\r\n                            })\r\n                        }, 3000)\r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n\r\n        // if (CheckSeen == true) {\r\n        //     validation = false;\r\n        //     this.setState({\r\n        //         errorText: \"*File must be of .csv format\"\r\n        //     })\r\n        // }\r\n\r\n\r\n        if (this.state.file == \"\") {\r\n            validation = false;\r\n            this.setState({\r\n                errorText: \"*File Import is required\"\r\n            })\r\n        }\r\n\r\n        \r\n\r\n\r\n        if (validation == true) {\r\n\r\n            let formData = new FormData();\r\n            formData.append('file', this.state.ExcelFile)\r\n\r\n\r\n\r\n            this.setState({\r\n                loading: true\r\n            })\r\n\r\n            // console.log('mydata', data)\r\n\r\n            var error = document.getElementById('err');\r\n            axios({\r\n                method: 'post',\r\n                url: Serverurl + 'event/import',\r\n                data: formData,\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n                config: {\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                }\r\n            })\r\n                .then((res) => {\r\n                 \r\n                    console.log('res', res.data)\r\n                    if (res.status === \"true\") {\r\n                        swal(\"Poof! Your imaginary file has been deleted!\", {\r\n                            icon: \"success\",\r\n                        });\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    } else {\r\n                        swal(\"Events Added Successfully!\");\r\n                    }\r\n                    setTimeout(() => {\r\n                        window.location.href = \"/component/GridEvents\"\r\n                    }, 3000)\r\n                    console.log('data', res.data)\r\n                })\r\n                .catch((err) => {\r\n                    console.log({ err })\r\n\r\n                    console.log(\"res\", err.response)\r\n\r\n                    var error_message = err.response.data.error.messages;\r\n\r\n                    console.log(\"error_excel\", error_message[0])\r\n\r\n                    if (err) {\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                loading: false\r\n                            })\r\n                            this.setState((willSuccess) => {\r\n                                if (willSuccess) {\r\n                                    swal(error_message[0], {\r\n                                        icon: \"warning\",\r\n                                    });\r\n                                } else {\r\n                                    swal(\"Your imaginary file is safe!\");\r\n                                }\r\n                            })\r\n                        }, 3000)\r\n                    }\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    handleFileInput = (event) => {\r\n        console.log(event.target.files, 'file')\r\n        console.log(event.target.files[0], 'file 0')\r\n        let file_1 = event.target.files[0]\r\n        this.setState({\r\n            file: file_1,\r\n            errorText: \"\"\r\n        })\r\n        if (event.target.files) {\r\n            this.setState({\r\n                [event.target.name]: event.target.files[0],\r\n                file: URL.createObjectURL(event.target.files[0]),\r\n                ExcelFile: event.target.files[0]\r\n            })\r\n        }\r\n      \r\n        console.log(\"File:\", event.target.files[0])\r\n    }\r\n\r\n\r\n    handleFileInputImages = (event) => {\r\n        console.log(event.target.files, 'file')\r\n        console.log(event.target.files[0], 'file 0')\r\n        let file_2 = event.target.files[0]\r\n        this.setState({\r\n            file_zip: file_2,\r\n            errorText: \"\"\r\n        })\r\n        if (event.target.files) {\r\n            this.setState({\r\n                [event.target.name]: event.target.files[0],\r\n                file_zip: URL.createObjectURL(event.target.files[0]),\r\n                ExcelFile2: event.target.files[0]\r\n            })\r\n        }\r\n      \r\n        console.log(\"File:\", event.target.files[0])\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-11 col-md-12 card\">\r\n                            <div class=\"parent\">\r\n                                <h4 class=\"mt-0 header-title\">Upload Events</h4>\r\n                                <div className=\"form-padding\">\r\n                                    <div class=\"form-group row input-margin\">\r\n                                        <label class=\"col-sm-2 col-form-label\">ZIP File</label>\r\n                                        <div class=\"col-sm-10\">\r\n                                            <input type=\"file\" id=\"input-file-now\" class=\"dropify\" name=\"file\" onChange={this.handleFileInputImages.bind(this)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {this.state.errorText ?\r\n                                        <p style={{ color: 'red' }}>{this.state.errorText}</p>\r\n                                        : null\r\n                                    }\r\n\r\n\r\n                                    {/* <div class=\"form-group row\">\r\n                                        <div class=\"button-align\">\r\n                                            <button type=\"button\" class=\"btn btn-danger waves-effect waves-light submit-button\" onClick={this.eventsImportImages.bind(this)}>\r\n                                                {this.state.loading_image == true ? \r\n                                                <Loader\r\n                                                type=\"Circles\"\r\n                                                color=\"#FFF\"\r\n                                                height={20}\r\n                                                width={20}\r\n                                                timeout={8000} \r\n                                        \r\n                                             />\r\n                                             :\r\n                                                \"Submit\"\r\n                                        }\r\n                                                </button>\r\n                                        </div>\r\n                                    </div> */}\r\n                                </div>\r\n\r\n                                <div className=\"form-padding\">\r\n                                    <div class=\"form-group row input-margin\">\r\n                                        <label class=\"col-sm-2 col-form-label\">CSV/Excel File</label>\r\n                                        <div class=\"col-sm-10\">\r\n                                            <input type=\"file\" id=\"input-file-now\" class=\"dropify\" name=\"file\" onChange={this.handleFileInput.bind(this)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {this.state.errorText ?\r\n                                        <p style={{ color: 'red' }}>{this.state.errorText}</p>\r\n                                        : null\r\n                                    }\r\n\r\n\r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"button-align\">\r\n                                            <button type=\"button\" class=\"btn btn-danger waves-effect waves-light submit-button\" onClick={this.eventsImport.bind(this)}>\r\n                                                {this.state.loading == true ? \r\n                                                <Loader\r\n                                                type=\"Circles\"\r\n                                                color=\"#FFF\"\r\n                                                height={20}\r\n                                                width={20}\r\n                                                timeout={8000} \r\n                                        \r\n                                             />\r\n                                             :\r\n                                                \"Submit\"\r\n                                        }\r\n                                                </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UploadEvents\r\n"]},"metadata":{},"sourceType":"module"}